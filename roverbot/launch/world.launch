<?xml version="1.0" encoding="UTF-8"?>

<launch>
	<!-- Robot pose -->
	<arg name="x" default="0"/>
	<arg name="y" default="0"/>
	<arg name="z" default="0"/>
	<arg name="roll" default="0"/>
	<arg name="pitch" default="0"/>
	<arg name="yaw" default="0"/>
	<arg name="robot_name" default="roverbot"/>

	<!-- Launch other relevant files-->
	<include file="$(find roverbot)/launch/robot_description.launch"/>

	<!-- World File -->
	<arg name="world_file" default="$(find roverbot)/worlds/empty.world"/>

	<!-- Launch Gazebo World -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="use_sim_time" value="true"/>
		<arg name="verbose" value="false"/>
		<arg name="debug" value="false"/>
		<arg name="gui" value="true" />
		<arg name="world_name" value="$(arg world_file)"/>
	</include>

	<!-- Find my robot Description-->
   <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find roverbot)/urdf/roverbot.xacro'"/> 
	

	<!-- Spawn My Robot -->
	
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		args="-urdf -param robot_description -model roverbot
			  -x $(arg x) -y $(arg y) -z $(arg z)
			  -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>
			  
	
	
	
	<!--launch rviz-->
	<node name="rviz" pkg="rviz" type="rviz" respawn="false"
		  args="-d $(find roverbot/default.rviz"/> 
		
	

  <node pkg="roverbot" type="pcl_converter" name="pcl_converter" output="screen"> launch-prefix="gnome-terminal --command" ></node>  
  
 <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
      <remap from="cloud_in" to="/filtered_cloud"/>
      <remap from="scan" to="/laser_scan" />
      <rosparam>
        target_frame: kinect_link
        transform_tolerance: 0.01
        min_height: 0.0
        max_height: 1.0
        
        angle_min: -1.5708
        angle_max: 1.5708
        angle_increment: 0.0087
        scan_time: 0.3333
        range_min: 0.45
        range_max: 4.0
        use_inf: true
        
        #concurrency_level affects number of pc queued for processing and the number of threadsused
        # 0: Detect number of cores
        # 1: Single threaded
        # 2: inf : Parallelism level
        concurrency_level: 1
      </rosparam>
    </node> 
	

</launch>
